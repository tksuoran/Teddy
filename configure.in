
dnl autoconf input for Teddy
dnl
dnl TEDDY - General graphics application library
dnl Copyright (C) 1999-2002  Timo Suoranta
dnl tksuoran@cc.helsinki.fi
dnl
dnl This library is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU Lesser General Public
dnl License as published by the Free Software Foundation; either
dnl version 2.1 of the License, or (at your option) any later version.
dnl
dnl This library is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public
dnl License along with this library; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
dnl
dnl $Id:  $


AC_PREREQ(2.13)
AC_INIT(Teddy/Teddy.h)
AC_SUBST(SHELL)
AC_SUBST(PKGDIR)
AC_SUBST(DEP_LIBS)
AC_SUBST(DEP_FLAGS)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(SOURCE_DIRS)
AC_SUBST(COMPACT_OUTPUT)
AC_SUBST(TARGET_LIBS)
AC_SUBST(LIB_EXT)
AC_SUBST(LIB_NAME)
AC_SUBST(LIB_VERSION)
AC_SUBST(LIB_RELEASE)
AC_SUBST(AR)
AR=ar
AC_CONFIG_HEADER(Teddy/TeddyConfig.h)
AC_CANONICAL_SYSTEM
LIB_NAME=Teddy
LIB_VERSION=1.0
LIB_RELEASE=1.79
AC_DEFINE_UNQUOTED(LIB_NAME,    $LIB_NAME,Library name)
AC_DEFINE_UNQUOTED(LIB_VERSION, $LIB_VERSION,Library version)
AC_DEFINE_UNQUOTED(LIB_RELEASE, $LIB_RELEASE,Release version)


dnl ----------------------------------
dnl Library options
dnl ----------------------------------


AC_DEFINE(TEDDY_INCLUDE_LW_SCENE,1,Define if Lightwave code is to be included.)
dnl AC_DEFINE(TEDDY_INCLUDE_COLDET  ,1,Define if ColDet code is to be included.)
dnl Add defines for BSP, TINYGL, FMOD


dnl ----------------------------------
dnl Dependencies
dnl ----------------------------------


SDL_VERSION=1.2.0
FT2_VERSION=6.0.0
DEP_LIBS=""
DEP_FLAGS=""


dnl --------------------------------
dnl Set default options
dnl --------------------------------


DEBUG_FLAGS=""
lib_do_static="yes"
lib_do_shared="no"
optimize="no"
compact_output="no"
WARNINGS="-Wall -Wno-unused -Wno-long-long -ansi -pedantic"
CWARNINGS="-Wno-uninitialized"
CXXWARNINGS=""
INCLUDES="-I."
SOURCE_DIRS_BASE=`find Teddy -type d -and \! -name CVS -and \! -name . -and \! -name TinyGL`
SOURCE_DIRS=""

AC_ARG_ENABLE(debug,
 [  --enable-debug              Produce a library with debugging symbols],
 [DEBUG_FLAGS="-g"])

AC_ARG_ENABLE(static,
 [  --enable-static             Produce a static library],
 [lib_do_static=yes])

AC_ARG_ENABLE(shared,
 [  --enable-shared             Produce a shared library],
 [lib_do_shared=yes])

AC_ARG_ENABLE(profile,
 [  --enable-profile            Produce a profiled library],
 [DEBUG_FLAGS="-g -pg"])

AC_ARG_ENABLE(optimize,
 [  --enable-optimize           Produce a library with optimizations],
 [optimize=yes])
if test "x$optimize" = "xyes" ; then
	OPTIMIZE_FLAGS="-O6 -fomit-frame-pointer -ffast-math -fexpensive-optimizations"
	case "$host" in
		*86-*-*) OPTIMIZE_FLAGS="$OPTIMIZE_FLAGS -malign-loops=2 -malign-jumps=2 -malign-functions=2";;
	esac
else
	OPTIMIZE_FLAGS=""
fi

AC_ARG_ENABLE(compact,
 [  --enable-compact            Compact make output],
 [compact_output=yes])

for dir in ${SOURCE_DIRS_BASE}; do
	SOURCE_DIRS="${SOURCE_DIRS} ${dir}"
done


dnl -----------------------------------------------
dnl Compiler
dnl -----------------------------------------------


dnl Check for compilers.  We set CFLAGS and CXXFLAGS to null if unset, so
dnl that these macros won't set them to default values that we don't want.
if test "x${CFLAGS-notset}" = "xnotset" ; then
	export CFLAGS
	CFLAGS=""
fi
AC_PROG_CC
if test "x${CXXFLAGS-notset}" = "xnotset" ; then
	export CXXFLAGS
	CXXFLAGS=""
fi
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_HEADER_STDC


dnl --------------------------------------------------------------------------
dnl MiniFMOD - NOT IN USE YET
dnl --------------------------------------------------------------------------
dnl case "$target" in
dnl     *-*-linux*)
dnl         AC_DEFINE(__LINUX__,1,Define if linux is detected.)
dnl 	    use_minifmod=yes
dnl     	;;
dnl 	*-*-cygwin*)
dnl 	    use_minifmod=yes
dnl 		;;
dnl 	*-*-mingw*)
dnl 	    use_minifmod=yes
dnl 		;;
dnl     *)
dnl         use_minifmod=no
dnl 	    ;;
dnl esac
dnl if test "x$use_minifmod" = "xyes" ; then
dnl     AC_DEFINE(USE_MINI_FMOD,1,Define if minifmod can be used.)
dnl else
dnl 	AC_MSG_WARN([
dnl *** Platform does not support minifmod.
dnl *** You may not be able to play XM files.])
dnl fi


dnl --------------------------------------------------------------------------
dnl Misc library build options
dnl --------------------------------------------------------------------------


if test "x${lib_do_shared}" = "xyes"; then
    case "${target}" in
        *-*-darwin* )
            AC_MSG_WARN([
*** MacOSX environment detected. Building (shared libraries) on MacOS X
*** is not tested and likely to have problems.])
            cp `sdl-config --plist` .
            cp -r `sdl-config --nib` .
            SDL_VERSION=1.2.5
            TARGET_LIBS="${TARGET_LIBS} lib${LIB_NAME}.dylib"
 			CFLAGS="$CFLAGS $SDL_CFLAGS -fPIC"
			CXXFLAGS="$CXXFLAGS $SDL_CFLAGS -fPIC"
            ;;
        *cygwin*)
            AC_MSG_WARN([
*** Cygwin environment detected. Building (shared libraries) on cygwin
*** is not tested and likely to have problems.])
            dnl "-luser32 -lgdi32" --> console
            dnl "-mwindows"        --> no console
            LIBS="$LIBS -luser32 -lgdi32"
            TARGET_LIBS="${TARGET_LIBS} lib${LIB_NAME}.dll"
            ;;
        *)
            TARGET_LIBS="${TARGET_LIBS} lib${LIB_NAME}.so"
 			CFLAGS="$CFLAGS $SDL_CFLAGS -fPIC"
			CXXFLAGS="$CXXFLAGS $SDL_CFLAGS -fPIC"
            ;;
    esac
fi
if test "x$lib_do_static" = "xyes"; then
    TARGET_LIBS="${TARGET_LIBS} lib${LIB_NAME}.a"
fi
if test "x$lib_do_static" != "xyes" -a "x$lib_do_shared" != "xyes" ; then
    AC_MSG_ERROR([
*** You must chooso to build at least either static or shared library.])
fi


dnl --------------------------------------------------------------------------
dnl Check for pkg-config
dnl --------------------------------------------------------------------------


AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" != "xno" ; then
    PKGDIR="`which pkg-config | sed s/bin\\\\/pkg-/lib\\\\/pkg/`"
else
    PKGDIR="${prefix}/lib/pkgconfig"
    if test "x$lib_do_shared" = "xyes"; then
        AC_MSG_WARN([
*** pkg-config is missing.
*** When you build programs which use this library as shared library,
*** you may need to manual library path configuration.])
    fi
fi


dnl --------------------------------------------------------------------------
dnl Check for SDL library
dnl --------------------------------------------------------------------------


AM_PATH_SDL($SDL_VERSION, have_SDL=yes, have_SDL=no)
if test "x$have_SDL" = "xno" ; then
    AC_MSG_ERROR([
*** SDL (development package) version $SDL_VERSION not found!
*** Try http://www.libsdl.org/
*** SDL is required by Teddy])
fi


CFLAGS="$CFLAGS $SDL_CFLAGS"
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"
DEP_FLAGS="$DEP_FLAGS $SDL_CFLAGS"

AC_CHECK_FUNCS( SDL_JoystickOpen, have_SDL_joystick=yes, have_SDL_joystick=no )
if test "x$have_SDL_joystick" = "xno" ; then
	AC_MSG_WARN([
*** This version of SDL doesn't have joystick support.
*** Configuring without joystick support.])
fi


dnl --------------------------------------------------------------------------
dnl Check for SDL_mixer library - NOT IN USE
dnl --------------------------------------------------------------------------


dnl have_sdl_mixer=no
dnl AC_CHECK_LIB(SDL_mixer, Mix_OpenAudio, have_sdl_mixer=yes)
dnl if test "x$have_sdl_mixer" = "xyes" ; then
dnl     AC_DEFINE(HAVE_LIB_SDL_MIXER,1,Define if SDL_mixer library is available.)
dnl 	LIBS="$LIBS -lSDL_mixer"
dnl else
dnl 	AC_MSG_WARN([
dnl *** Can't find the SDL_mixer library
dnl *** Try: http://www.libsdl.org/projects/SDL_mixer
dnl *** You may not be able use any audio.])
dnl fi


dnl --------------------------------------------------------------------------
dnl Check for SDL_image library
dnl --------------------------------------------------------------------------


have_sdl_image=no
AC_CHECK_LIB(SDL_image, IMG_Load_RW, have_sdl_image=yes)
if test "x$have_sdl_image" = "xyes" ; then
    AC_DEFINE(HAVE_LIB_SDL_IMAGE,1,Define if SDL_image library is available.)
	LIBS="$LIBS -lSDL_image"
else
	AC_MSG_WARN([
*** Can't find the SDL_image library
*** Try: http://www.libsdl.org/projects/SDL_image
*** You may not be able to use some image files.])
fi


dnl --------------------------------------------------------------------------
dnl Check for libjpg library
dnl --------------------------------------------------------------------------


AC_CHECK_LIB(jpeg, jpeg_CreateDecompress, have_libjpeg=yes)
if test "x$have_libjpeg" = "xno"; then
	AC_MSG_WARN([
*** Unable to find JPEG library (http://www.ijg.org/)
*** You may not be able to use some image files.])
fi


dnl --------------------------------------------------------------------------
dnl Check for png library
dnl --------------------------------------------------------------------------


AC_CHECK_LIB(png, png_create_read_struct, have_libpng=yes, , -lz)
if test "x$have_libpng" = "xyes"; then
	AC_DEFINE(HAVE_LIB_PNG,1,Define if png library is available.)
	LIBS="$LIBS -lpng"
else
	AC_MSG_WARN([
*** Unable to find PNG library (http://www.libpng.org/pub/png/libpng.html)
*** You may not be able to use some image files.])
fi


dnl --------------------------------------------------------------------------
dnl Check for libz library
dnl --------------------------------------------------------------------------


AC_CHECK_LIB(z, uncompress, have_libz=yes)
if test "x$have_libz" = "xno"; then
	AC_MSG_WARN(
		[*** Unable to find Zlib library (http://www.cdrom.com/pub/infozip/zlib/)
        You may not be able to use some image files.
	])
fi


dnl --------------------------------------------------------------------------
dnl Check for libsibc++  THIS LIBRARY IS NOT NEEDED
dnl --------------------------------------------------------------------------
dnl SIGC_VERSION=1.0.3
dnl AM_PATH_SIGC($SIGC_VERSION, have_SIGC=yes, have_SIGC=no)
dnl if test "x$have_SIGC" = "xyes" ; then
dnl     AC_DEFINE(HAVE_LIB_SIGC,1,Define if sigc++ library is available.)
dnl     CFLAGS="$CFLAGS $SIGC_CFLAGS"
dnl     CXXFLAGS="$CXXFLAGS $SIGC_CFLAGS"
dnl     LIBS="$LIBS $SIGC_LIBS"
dnl     DEP_FLAGS="$DEP_FLAGS $SIGC_CFLAGS"
dnl else
dnl     AC_MSG_WARN([
dnl *** libsigc++ (development package) version $SDL_SIGC not found!
dnl *** Try http://libsigc.sourceforge.net/
dnl *** libsigc++ is recommended by Teddy])
dnl fi


dnl --------------------------------------------------------------------------
dnl Check for FreeType library - NOT IN USE YET
dnl --------------------------------------------------------------------------


dnl have_freetype=no
dnl AC_CHECK_FT2($FT2_VERSION,have_freetype=yes,have_freetype=no)
dnl if test "x$have_freetype" = "xyes" ; then
dnl    AC_DEFINE(HAVE_LIB_FREETYPE,1,Define if freetype library is available.)
dnl     CFLAGS="$CFLAGS $FT2_CFLAGS"
dnl     CXXFLAGS="$CXXFLAGS $FT2_CFLAGS"
dnl     LIBS="$LIBS $FT2_LIBS"
dnl     DEP_FLAGS="$DEP_FLAGS $FT2_CFLAGS"
dnl else
dnl 	AC_MSG_WARN([
dnl *** Can't find the freetype library
dnl *** Try: http://www.freetype.org
dnl *** Font selection may be limited.])
dnl fi


dnl --------------------------------------------------------------------------
dnl Choose graphics backend
dnl --------------------------------------------------------------------------


use_opengl=no
use_tinygl=no
AC_ARG_ENABLE(tinygl,
 [  --enable-tinygl             Use TinyGL software rendering instead of OpenGL],
 use_tinygl=$enableval, use_opengl=no)

if test x$use_tinygl = xno ; then
	AC_MSG_CHECKING(for OpenGL support)
	case "$target" in
	    *-*-beos*)
    		LIBS="$LIBS -lGL"
	        use_opengl=yes
    	    ;;
	    *-*-macos*)
    	    use_opengl=yes
        	;;
	    *-*-darwin* )
    	    LIBS="$LIBS -framework OpenGL -framework AGL"
        	use_opengl=yes
	        ;;
    	*-*-qnx*)
	    	video_photon=no
	    	AC_TRY_COMPILE([
		      #include <Ph.h>
    		  #include <Pt.h>
		      #include <photon/Pg.h>
    		  #include <photon/PdDirect.h>
	    	],[
	    	 PgDisplaySettings_t *visual;
		    ],[
	    	video_photon=yes
		    ])
    		if test x$video_photon = xyes; then
	    		AC_TRY_COMPILE([
			     #include <GL/gl.h>
			    ],[
		    	],[
			    use_opengl=yes
			    ])
		    	if test x$use_opengl = xyes; then
		    	    LIBS="$LIBS -lph -lGL"
			    fi
    		fi
            ;;
    	*-*-mingw*)
    	    use_opengl=yes
			LIBS="$LIBS -lopengl32"
			;;
	    *)
		    AC_TRY_COMPILE([
	    	 #include <GL/gl.h>
		    ],[
    		],[
			use_opengl=yes
	    	])
	    	if test x$use_opengl = xyes; then
	    	    LIBS="$LIBS -lGL"
		    fi
    	    ;;
	esac
	AC_MSG_RESULT($use_opengl)
	if test x$use_opengl = "xyes" -a test; then
		AC_DEFINE(USE_OPEN_GL,1,Define if native OpenGL is being used.)
	else
		AC_MSG_WARN([
*** Native OpenGL not found. Teddy will use TinyGL as software OpenGL subset render])
	    AC_MSG_ERROR([
*** Native OpenGL not found. Teddy does not include TinyGL at the moment.])
		use_tinygl=yes
	fi
fi
if test x$use_tinygl = xyes ; then
dnl	AC_DEFINE(USE_TINY_GL,1,Define if software rendering is being used.)
dnl	SOURCE_DIRS="$SOURCE_DIRS Teddy/TinyGL"
    AC_MSG_ERROR([
*** Teddy does not include TinyGL at the moment.])
fi


dnl --------------------------------------------------------------------------
dnl Finalize options
dnl --------------------------------------------------------------------------


CWARNINGS="$WARNINGS $CWARNINGS"
CXXWARNINGS="$WARNINGS $CXXWARNINGS"
CFLAGS="$CFLAGS $DEBUG_FLAGS $OPTIMIZE_FLAGS $INCLUDES $CWARNINGS"
CXXFLAGS="$CXXFLAGS $DEBUG_FLAGS $OPTIMIZE_FLAGS $INCLUDES $CXXWARNINGS"
if test "x$compact_output" = "xyes"; then
	COMPACT_OUTPUT="@ls -sh \$@"
    CC="@${CC}"
    CXX="@${CXX}"
    AR="@${AR}"
fi

dnl -----------------------------------------------
dnl Generates Makefile's, configuration files and scripts
dnl -----------------------------------------------


AC_OUTPUT( Makefile Teddy.pc static_opt_cflags static_opt_libs )


dnl Print summary.
echo "Configuration done. Now type \"make\"."

