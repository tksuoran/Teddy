
#	Makefile.in for Teddy
#
#	TEDDY - General graphics application library
#	Copyright (C) 1999-2002  Timo Suoranta
#	tksuoran@cc.helsinki.fi
#
#	This library is free software; you can redistribute it and/or
#	modify it under the terms of the GNU Lesser General Public
#	License as published by the Free Software Foundation; either
#	version 2.1 of the License, or (at your option) any later version.
#
#	This library is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#	Lesser General Public License for more details.
#
#	You should have received a copy of the GNU Lesser General Public
#	License along with this library; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#   $Id:  $


LIB_NAME        = @LIB_NAME@
LIB_VERSION     = @LIB_VERSION@
LIB_RELEASE     = @LIB_RELEASE@
SOURCE_DIRS     = @SOURCE_DIRS@
PREFIX          = @prefix@
BINDIR          = $(PREFIX)/bin
LIBDIR          = $(PREFIX)/lib
INCLUDEDIR      = $(PREFIX)/include/$(LIB_NAME)
PKGDIR          = @PKGDIR@
SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
CC              = @CC@
CXX             = @CXX@
INSTALL         = @INSTALL@
MKDEPEND        = $(CXX) $(CXXFLAGS) -MM
MKINSTALLDIRS   = $(SHELL) ./mkinstalldirs
CFLAGS          = @CFLAGS@
CXXFLAGS        = @CXXFLAGS@
COMPACT_OUTPUT  = @COMPACT_OUTPUT@
LIBS            = @LIBS@
FIND_CPP_FILES  = $(wildcard $(dir)/*.cpp)
FIND_C_FILES    = $(wildcard $(dir)/*.c)
FIND_H_FILES    = $(wildcard $(dir)/*.h)
CPP_SRCS       := $(foreach dir,$(SOURCE_DIRS),$(FIND_CPP_FILES))
C_SRCS         := $(foreach dir,$(SOURCE_DIRS),$(FIND_C_FILES))
HEADERS        := $(foreach dir,$(SOURCE_DIRS),$(FIND_H_FILES))
OBJS            = $(CPP_SRCS:.cpp=.o) $(C_SRCS:.c=.o)
TARGET_LIBS     = @TARGET_LIBS@

all: $(TARGET_LIBS)

.SUFFIXES: $(SUFFIXES) .c .cpp .o

.cpp.o:
	$(CXX) $(CXXFLAGS) -o $@ -c $<
	$(COMPACT_OUTPUT)

.c.o:
	$(CC) $(CFLAGS) -o $@ -c $<
	$(COMPACT_OUTPUT)

doc: $(CPP_SRCS) $(C_SRCS) $(H_SRCS)
	doxygen

# Rule for shared library on GNU/Linux
lib$(LIB_NAME).so: $(OBJS)
	$(CXX) -shared -o $@ $^ $(LIBS)
	$(COMPACT_OUTPUT)

# Rule for static library on GNU/Linux
lib$(LIB_NAME).a: $(OBJS)
	$(AR) rc $@ $^
	$(RANLIB) $@
	$(COMPACT_OUTPUT)
	@echo Built $@ resulting `nm --defined $@ | wc -l` symbols

# Rule for shared library on macosx
lib$(LIB_NAME).dylib: $(OBJS)
	$(CC) -dynamiclib -prebind -undefined suppress -o $@ -install_name $@ -current_version $(LIB_VERSION) $^ $(LIBS)
	$(COMPACT_OUTPUT)

clean:
	-rm -fR core $(LIB_NAME)/*.o $(LIB_NAME)/*/*.o $(TARGET_LIBS) *~ */*~ */*/~ $(LIB_NAME).pc doc

distclean: clean
	-rm -f .depend Makefile config.status config.cache config.log $(LIB_NAME)/$(LIB_NAME)Config.h static_opt_cflags static_opt_libs

install: all
	$(MKINSTALLDIRS) $(INCLUDEDIR)
	$(MKINSTALLDIRS) $(LIBDIR)
	$(MKINSTALLDIRS) $(PKGDIR)
	for header in $(HEADERS); do $(INSTALL) -D $$header $(INCLUDEDIR)/$$header; done
	for lib in $(TARGET_LIBS); do $(INSTALL) $$lib $(LIBDIR); done
	$(INSTALL) $(LIB_NAME).pc $(PKGDIR)

uninstall:
	for lib in $(TARGET_LIBS); do rm $(LIBDIR)/$$lib; done
	for header in $(HEADERS); do rm $(INCLUDEDIR)/$$header; done
	rm -f $(PKGDIR)/$(LIB_NAME).pc

print:
	@echo "Build configuration for $(TARGET_LIBS):"
	@echo "SOURCE_DIRS = $(SOURCE_DIRS)"
	@echo "PREFIX      = $(PREFIX)"
	@echo "BINDIR      = $(BINDIR)"
	@echo "LIBDIR      = $(LIBDIR)"
	@echo "INCLUDEDIR  = $(INCLUDEDIR)"
	@echo "PKGDIR      = $(PKGDIR)"
	@echo "CC          = $(CC)"
	@echo "CXX         = $(CXX)"
	@echo "AR          = $(AR)"
	@echo "RANLIB      = $(RANLIB)"
	@echo "CFLAGS      = $(CFLAGS)"
	@echo "CXXFLAGS    = $(CXXFLAGS)"
	@echo "LIBS        = $(LIBS)"
	@echo "TARGET_LIBS = $(TARGET_LIBS)"
	@cat Teddy.pc

depend .depend:
	@echo Updating dependencies...
	@for sdir in $(SOURCE_DIRS); do $(MKDEPEND) $$sdir/*.h $$sdir/*.cpp $$sdir/*.c | sed "s:^[^ ]:$$sdir/&:"; done > .depend 2>/dev/null

ifneq ($(MAKECMDGOALS), clean)
  ifneq ($(MAKECMDGOALS), print)
    ifneq ($(MAKECMDGOALS), distclean)
      -include .depend
    endif
  endif
endif

.PHONY: all clean distclean install uninstall depend print
